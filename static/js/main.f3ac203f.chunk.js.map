{"version":3,"sources":["reducers/moviesReducer.js","reducers/index.js","actions/types.js","store.js","components/layout/Navbar.js","components/movies/Movie.js","components/movies/Movies.js","actions/movieActions.js","components/movies/MovieDetails.js","App.js","serviceWorker.js","index.js"],"names":["initialState","page","movies","total_pages","total_results","movieDetails","combineReducers","state","arguments","length","undefined","action","type","Object","objectSpread","payload","results","console","log","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION__","Navbar","react_default","a","createElement","className","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","react_router_dom","to","Movie","_this$props$movie","this","props","movie","vote_average","vote_count","video","title","poster_path","overview","backdrop_path","release_date","src","concat","alt","Component","Movies","getPopular","map","movies_Movie","key","connect","_ref","asyncToGenerator","regenerator_default","mark","_callee","dispatch","wrap","_context","prev","next","axios","get","then","res","data","stop","_x","MovieDetails","backdrop","match","params","getMovieDetails","_ref2","_callee2","_context2","_x2","App","react_redux_es","react_router","exact","path","component","Boolean","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f3ac203f.chunk.js","sourcesContent":["import { GET_POPULAR, GET_MOVIE_DETAILS } from \"../actions/types\";\n\nconst initialState = {\n  page: \"\",\n  movies: [],\n  total_pages: \"\",\n  total_results: \"\",\n  movieDetails: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_POPULAR:\n      // console.log(action.payload);\n      return {\n        ...state,\n        page: action.payload.page,\n        movies: action.payload.results,\n        total_pages: action.payload.total_pages,\n        total_results: action.payload.total_results\n      };\n\n    case GET_MOVIE_DETAILS:\n      console.log(action.payload);\n      return {\n        ...state,\n        movieDetails: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport moviesReducer from \"./moviesReducer\";\nexport default combineReducers({\n  movies: moviesReducer\n});\n","export const GET_POPULAR = \"GET_POPULAR\";\nexport const GET_MOVIE_DETAILS = \"GET_MOVIE_DETAILS\";\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nexport default store;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Navbar() {\n  return (\n    <nav className=\"navbar navbar-expand-md navbar-dark sticky-top\">\n      <a className=\"navbar-brand\" href=\"http://localhost:3001/\">\n        Navbar\n      </a>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarSupportedContent\"\n        aria-controls=\"navbarSupportedContent\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\" />\n      </button>\n\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item active\">\n            <Link to=\"/\" className=\"nav-link\" href=\"!#\">\n              Home\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <a className=\"nav-link\" href=\"!#\">\n              Link\n            </a>\n          </li>\n        </ul>\n        {/* <form className=\"form-inline my-2 my-lg-0\">\n          <input\n            className=\"form-control mr-sm-2\"\n            type=\"search\"\n            placeholder=\"Search\"\n            aria-label=\"Search\"\n          />\n          <button\n            className=\"btn btn-outline-success my-2 my-sm-0\"\n            type=\"submit\"\n          >\n            Search\n          </button>\n        </form> */}\n      </div>\n    </nav>\n  );\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Movie extends Component {\n  render() {\n    const {\n      id,\n      vote_count,\n      video,\n      vote_average,\n      title,\n      poster_path,\n      backdrop_path,\n      overview,\n      release_date\n    } = this.props.movie;\n    // const videoURl = `https://api.themoviedb.org/3/movie/${id}/videos?api_key=59f1e4f28c3fd33b83142a88610cc03e&language=en-US\n    // `;\n    // console.log(video);\n    return (\n      <div className=\"card\">\n        <img\n          src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n          className=\"card-img-top\"\n          alt=\"Poster\"\n        />\n        <div className=\"card-body\">\n          <div className=\"title-container mb-2\">\n            <h5 className=\"card-title movie-title mb-0\">{title}</h5>\n            <span className=\"movie-rating\">\n              <i className=\"far fa-thumbs-up mx-1\" />\n              {vote_average}\n            </span>\n          </div>\n          <p className=\"card-text movie-overview\">{overview}</p>\n        </div>\n        {/* <ul className=\"list-group list-group-flush\">\n          <li className=\"list-group-item\">Release Date: {release_date}</li>\n        </ul> */}\n        <div className=\"card-body\">\n          <Link to={`/moviedetails/${id}`} className=\"card-link btn btn-dark links\">\n            Movie Details\n          </Link>\n          <a href=\"!#\" className=\"card-link btn btn-dark links\">\n            Trailer\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Movie;\n","import React, { Component } from \"react\";\nimport { getPopular } from \"../../actions/movieActions\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport Movie from \"./Movie\";\n\nclass Movies extends Component {\n  componentDidMount() {\n    this.props.getPopular();\n  }\n  render() {\n    const { movies } = this.props;\n    // console.log(movies);\n    if (movies) {\n      return (\n        <div className=\"container py-3\">\n          <div className=\"card-columns\">\n            {movies.map(movie => (\n              <Movie key={movie.id} movie={movie} />\n            ))}\n          </div>\n        </div>\n      );\n    } else {\n      return <p>Loading</p>;\n    }\n  }\n}\n\nMovies.propTypes = {\n  movies: PropTypes.array.isRequired,\n  getPopular: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  page: state.movies.page,\n  movies: state.movies.movies,\n  total_pages: state.movies.total_pages,\n  total_results: state.movies.total_results\n});\n\nexport default connect(\n  mapStateToProps,\n  { getPopular }\n)(Movies);\n","import { GET_POPULAR, GET_MOVIE_DETAILS } from \"./types.js\";\nimport axios from \"axios\";\n\n// const URL = \"http://localhost:3000/movies\";\nconst URL =\n  \"https://api.themoviedb.org/3/movie/popular?api_key=59f1e4f28c3fd33b83142a88610cc03e&language=en-US&page=1\";\n\nexport const getPopular = () => async dispatch => {\n  await axios.get(`${URL}`).then(res => {\n    // console.log(res.data);\n    dispatch({\n      type: GET_POPULAR,\n      payload: res.data\n    });\n  });\n};\n\nexport const getMovieDetails = id => async dispatch => {\n  console.log(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=59f1e4f28c3fd33b83142a88610cc03e&language=en-US`\n  );\n  await axios\n    .get(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=59f1e4f28c3fd33b83142a88610cc03e&language=en-US`\n    )\n    .then(res => {\n      // console.log(res.data);\n      dispatch({\n        type: GET_MOVIE_DETAILS,\n        payload: res.data\n      });\n    });\n};\n","import React, { Component } from \"react\";\nimport { getMovieDetails } from \"../../actions/movieActions\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nclass MovieDetails extends Component {\n  state = {\n    backdrop: \"\"\n  };\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    console.log(id);\n    this.props.getMovieDetails(id);\n  }\n\n  render() {\n    const { movieDetails } = this.props;\n    console.log(this.props.movieDetails);\n    if (movieDetails.backdrop_path) {\n      return (\n        <div>\n          <img\n            src={`https://image.tmdb.org/t/p/w500/${\n              movieDetails.backdrop_path\n            }`}\n            alt=\"Backdrop\"\n            className=\"w-100\"\n          />\n        </div>\n      );\n    } else {\n      return <p>Loading</p>;\n    }\n  }\n}\n\nMovieDetails.propTypes = {\n  movieDetails: PropTypes.object.isRequired,\n  getMovieDetails: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  movieDetails: state.movies.movieDetails\n});\n\nexport default connect(\n  mapStateToProps,\n  { getMovieDetails }\n)(MovieDetails);\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\n// Components\nimport Navbar from \"./components/layout/Navbar\";\nimport Movies from \"./components/movies/Movies\";\nimport MovieDetails from \"./components/movies/MovieDetails\";\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <div className=\"\">\n              <Navbar />\n              <Switch>\n                <Route exact path=\"/\" component={Movies} />\n                <Route\n                  exact\n                  path=\"/moviedetails/:id\"\n                  component={MovieDetails}\n                />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}